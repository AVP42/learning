/**
 * 单例模式：
 *      1.单例应当满足的3个条件：
 *          1.1 只能有1个实例
 *          1.2 自行创建对象
 *          1.3 自行提供对象
 *       2.应用：
 *          2.1 java.lang.RunTime
 *          2.2 java.beans.Introspector
 *       3.与其他模式的联系
 *          3.1 使用了简单工厂模式，是简单工厂模式的特殊的简化模式，只有一个具体实现类
 *       4. 不完成单例模式（默认实例模式 Default Instance Pattern）：即开放构造子，不推荐，是一种不负责任的方式
 *
 *    ** 破环单例模式的方法及解决方式
 *      1. 反射
 *          除了枚举外，其他方式都可以通过反射来创建实例
 *          解决方式是在构造器中进行判断引用单例的变量是否已有值, 如果已经创建，则抛出异常
 *      2. JDK序列化
 *          通过Serializable是可以反序列化出一个新的对象
 *          解决方式：
 *              不实现该接口；
 *              如果需要实现该接口，可以重写反序列化方法ReadResolve(),在该方法中直接返回已经
 *
 *
 *
 *
 */
package info.wufc.learning.design_pattern.singleton;