/**
 *  不变模式：不需要类图描述
 *      两种形式：弱不变模式与强不变模式
 *          弱不变模式：该类的实例的状态是不可变的，但是该类的子类具有可能变化的状态
 *              实现：
 *                  1.不提供改变状态的方法，经过构造子初始化后，状态则不再改变。
 *                  2.所有属性都是私有的
 *                  3.不变对象引用到可变的对象，需要限制外界对可变对象的访问，防止外界修改这些对象。
 *                      比如可变对象在不变对象内初始化，或者对客户端传入的可变对象复制一份
 *              缺点：可变的子对象可能修改父对象的状态，从而可能允许外界修改父对象的状态。
 *          强不变模式：该类及其子类的实例都是不可变的。
 *              实现：
 *                  1.所有方法都是final的
 *                  2.该类是final的
 *
 *      典型的不变类:
 *          String 类
 *
 */
package info.wufc.learning.design_pattern.immutable;